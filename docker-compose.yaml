services:
  backend:
    container_name: daikoku-be
    build:
      context: .
      dockerfile: ./backend.Dockerfile
    ports:
      - 10102:3000
    restart: always
    volumes:
      - ./backend:/app
      - be_node_modules:/app/node_modules
    tty: true
    depends_on:
      - postgres
    command:
      sh -c "yarn run start:dev"
    logging:
      driver: json-file
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      FRONTEND_URL: ${FRONTEND_URL}
      NODE_ENV: development
      TZ: UTC

  frontend:
    container_name: daikoku-fe
    build:
      context: .
      dockerfile: ./frontend.Dockerfile
    ports:
      - 10101:5173
    restart: always
    volumes:
      - ./frontend:/app
      - fe_node_modules:/app/node_modules
    tty: true
    command:
      sh -c "yarn dev --host"
    logging:
      driver: json-file
    environment:
      VITE_BACKEND_URL: ${BACKEND_URL}
      VITE_GOOGLE_ANALYTICS_ID: ${GOOGLE_ANALYTICS_ID}
      VITE_FRONTEND_URL: ${FRONTEND_URL}
      NODE_ENV: development
      TZ: UTC

  postgres:
    container_name: daikoku-db
    image: postgres:13
    ports:
      - 10103:5432
    restart: always
    volumes:
      - check_in_daikoku_db_initdbd:/docker-entrypoint-initdb.d
      - check_in_daikoku_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      TZ: UTC

volumes:
  check_in_daikoku_db_initdbd:
  check_in_daikoku_db_data:
  be_node_modules:
  fe_node_modules:

networks:
  daikoku-network:
    driver: bridge